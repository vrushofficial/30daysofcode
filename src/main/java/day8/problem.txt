Define subsequence as any subset of an array. We define a subarray as a contiguous subsequence in an array.

Given an array, find the maximum possible sum among:

all nonempty subarrays.
all nonempty subsequences.
find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Note that empty subarrays/subsequences should not be considered.

For example, given an array , the maximum subarray sum is comprised of element inidices  and the sum is .
The maximum subsequence sum is comprised of element indices  and the sum is .

Constraints
The subarray and subsequences you consider should have at least one element.

Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6


------------------------------------------Solution------------------------------------------------
Kadane's algo


for all positive contiguous segments of the array (local_max is used for this).
And keep track of maximum sum contiguous segment among all positive segments (global_max is used for this).
Each time we get a positive sum compare it with global_max and update global_max
if it is greater than max_so_far
or else set global_max to zero if <0
